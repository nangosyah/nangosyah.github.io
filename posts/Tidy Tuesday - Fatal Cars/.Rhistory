library(tidytuesdayR)
library(GWalkR)
library(tidyverse)
# load data
tuesdata <- tidytuesdayR::tt_load('2025-04-22')
daily_accidents <- tuesdata$daily_accidents
daily_accidents_420 <- tuesdata$daily_accidents_420
# create days
daily_accidents$days <- weekdays(daily_accidents$date)
daily_accidents$months <- factor(months(daily_accidents$date))
daily_accidents_420$days <- weekdays(daily_accidents_420$date)
daily_accidents_420$months <- factor(months(daily_accidents_420$date))
# total accidents by day
weekday_summary <- daily_accidents_420 %>%
group_by(days) %>%
summarise(avg_fatalities = mean(fatalities_count, na.rm = TRUE)) %>%
arrange(desc(avg_fatalities))
# average fatal car crashes
ggplot(weekday_summary,
aes(x = reorder(days, -avg_fatalities), y = avg_fatalities)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Weekday",
y = "Average Fatalities",
title = "Average Fatal Car Crashes by Weekday") +
theme_bw()
# month of the year
month_summary <- daily_accidents %>%
group_by(months) %>%
summarise(avg_fatalities = mean(fatalities_count, na.rm = TRUE))
# day of the week
daily_accidents <- daily_accidents %>%
mutate(year = year(date),
is_weekend = days %in% c("Saturday", "Sunday"))
daily_accidents_420 <- daily_accidents_420 %>%
mutate(days = weekdays(date),
year = year(date),
is_weekend = days %in% c("Saturday", "Sunday"),
holiday = ifelse(e420 == TRUE, "4/20", "Non-4/20"))
daily_accidents$label <- ifelse(daily_accidents$is_weekend, "Weekend", "Weekday")
daily_accidents_420$label <- ifelse(daily_accidents_420$is_weekend, "Weekend", "Weekday")
# change to factor
daily_accidents$days <- as.factor(daily_accidents$days)
daily_accidents$months <- as.factor(daily_accidents$months)
daily_accidents$is_weekend <- as.factor(daily_accidents$is_weekend)
daily_accidents$label <- as.factor(daily_accidents$label)
daily_accidents_420$days <- as.factor(daily_accidents_420$days)
daily_accidents_420$months <- as.factor(daily_accidents_420$months)
daily_accidents_420$is_weekend <- as.factor(daily_accidents_420$is_weekend)
daily_accidents_420$e420 <- as.factor(daily_accidents_420$e420)
daily_accidents_420$label <- as.factor(daily_accidents_420$label)
daily_accidents_420 <- daily_accidents_420 %>%
filter(!is.na(fatalities_count), !is.na(e420), !is.na(label))
# average fatalities per day by year and label
year_fatal <- daily_accidents_420 %>%
group_by(year, label) %>%
summarise(avg_fatalities = mean(fatalities_count, na.rm = TRUE), .groups = 'drop')
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(size = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_pubclean()
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_pubclean()
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_bw()
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_pubclean()
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_pubr()
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_test()
holiday_420 <- daily_accidents_420 %>%
group_by(holiday, label) %>%
summarise(avg_fatalities = mean(fatalities_count, na.rm = TRUE),
count = n(),
.groups = "drop")
ggplot(holiday_420, aes(x = holiday, y = avg_fatalities, fill = label)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(avg_fatalities, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3.5) +
labs(
title = "Average Fatalities on 4/20 vs Other Days",
x = "Day Category",
y = "Avg. Fatalities per Day",
fill = "Day Type") +
theme_pubclean()
ggplot(holiday_420, aes(x = holiday, y = avg_fatalities, fill = label)) +
geom_col(position = position_dodge(width = 0.7), width = 0.6) +
geom_text(aes(label = round(avg_fatalities, 2)),
position = position_dodge(width = 0.7),
vjust = -0.5, size = 3.5) +
labs(
title = "Average Fatalities on 4/20 vs Other Days",
x = "Day Category",
y = "Avg. Fatalities per Day",
fill = "Day Type") +
theme_test()
year_fatal_420 <- daily_accidents_420 %>%
filter(month(date) == 4 & day(date) == 20) %>%
group_by(year = year(date)) %>%
summarise(average_420_fatalities = mean(fatalities_count, na.rm = TRUE), .groups = "drop")
year_fatal_420 <- daily_accidents_420 %>%
filter(month(date) == 4 & day(date) == 20) %>%
group_by(year = year(date)) %>%
summarise(average_420_fatalities = mean(fatalities_count, na.rm = TRUE), .groups = "drop")
year_fatal_with_420 <- year_fatal %>%
left_join(year_fatal_420, by = "year")
# plot
ggplot(year_fatal_with_420, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(size = 0.2) +
geom_point(size = 1) +
geom_line(aes(x = year, y = average_420_fatalities),
color = "red", linetype = "dashed", size = 0.2) +
geom_point(aes(x = year, y = average_420_fatalities),
color = "red", size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_test() +
scale_color_manual(
values = c("Weekend" = "blue", "Weekday" = "green", "4/20 Average" = "red"),
labels = c("Weekend", "Weekday", "4/20 Average")) +
scale_x_continuous(breaks = year_fatal_with_420$year,
labels = year_fatal_with_420$year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
geom_text(aes(x = max(year), y = max(average_420_fatalities),
label = "Average 4/20 Fatalities"),
color = "black",
size = 4,
hjust = 1,
vjust = 6.5)
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
scale_x_continuous(breaks = year_fatal$year,
labels = year_fatal$year)
theme_test()
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
scale_x_continuous(breaks = year_fatal$year,
labels = year_fatal$year)
theme_test() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
scale_x_continuous(breaks = year_fatal$year,
labels = year_fatal$year)
theme_test() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_test() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
View(year_fatal)
ggplot(year_fatal, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(linewidth = 0.2) +
geom_point(size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_test() +
scale_x_continuous(breaks = year_fatal$year,
labels = year_fatal$year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
year_fatal_with_420 <- year_fatal %>%
left_join(year_fatal_420, by = "year")
# plot
ggplot(year_fatal_with_420, aes(x = year, y = avg_fatalities, color = label)) +
geom_line(size = 0.2) +
geom_point(size = 1) +
geom_line(aes(x = year, y = average_420_fatalities),
color = "red", linetype = "dashed", size = 0.2) +
geom_point(aes(x = year, y = average_420_fatalities),
color = "red", size = 1) +
labs(title = "Average Daily U.S. Fatalities by Year: Weekday vs Weekend",
x = "Year",
y = "Avg. Fatalities per Day",
color = "Day Type") +
theme_test() +
scale_color_manual(
values = c("Weekend" = "blue", "Weekday" = "green", "4/20 Average" = "red"),
labels = c("Weekend", "Weekday", "4/20 Average")) +
scale_x_continuous(breaks = year_fatal_with_420$year,
labels = year_fatal_with_420$year) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom") +
geom_text(aes(x = max(year), y = max(average_420_fatalities),
label = "Average 4/20 Fatalities"),
color = "black",
size = 4,
hjust = 1,
vjust = 6.5)
library(lubridate)
library(car)
library(ggpubr)
# check normality of each weekday group
ggqqplot(daily_accidents_420,
x = "fatalities_count",
facet.by = "days")
# Levene's Test for equal variances
leveneTest(fatalities_count ~ days, data = daily_accidents_420)
# This assumption is violated we shall use the Kruskal-Wallis test, that does assume equal variances.
kruskal.test(fatalities_count ~ days, data = daily_accidents_420)
# the p-value is significant (p < 0.05), indicating that at least one day has a statistically different mean number of fatalities.
# Is there a pattern overtime
ggplot(daily_accidents_420, aes(x = date, y = fatalities_count)) +
#geom_line(alpha = 0.6) +
geom_smooth(span = 0.2, se = FALSE, method = "loess") +
labs(title = "Trend in Daily Fatalities Over Time", y = "Fatalities") +
theme_pubclean() +
facet_wrap(~months)
# Is there a pattern overtime
ggplot(daily_accidents_420, aes(x = date, y = fatalities_count)) +
#geom_line(alpha = 0.6) +
geom_smooth(span = 0.2, se = FALSE, method = "loess") +
labs(title = "Trend in Daily Fatalities Over Time", y = "Fatalities") +
theme_pubclean() +
facet_wrap(~months) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
ggplot(daily_accidents_420, aes(x = date, y = fatalities_count)) +
#geom_line(alpha = 0.6) +
geom_smooth(span = 0.2, se = FALSE, method = "loess") +
geom_vline(data = daily_accidents_420[daily_accidents_420$e420 == TRUE, ],
aes(xintercept = date),
color = "red", linetype = "dashed", size = 0.6) +
labs(title = "Daily U.S. Fatal Car Crashes: Trends by Weekday vs Weekend",
#subtitle = "Smoothed trend lines show fatal crash patterns over time",
x = "Date",
y = "Number of Fatalities") +
theme_pubclean() +
facet_wrap(~label)
# Is there a pattern overtime
ggplot(daily_accidents_420, aes(x = date, y = fatalities_count)) +
#geom_line(alpha = 0.6) +
geom_smooth(span = 0.2, se = FALSE, method = "loess") +
labs(title = "Trend in Daily Fatalities Over Time", y = "Fatalities") +
theme_pubclean() +
facet_wrap(~months) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
# Do Holidays or Weekends Have Higher Risk?
library(tidymodels)
library(performance)  # for check_overdispersion()
library(poissonreg)
poisson <- poisson_reg() %>%
set_engine("glm") %>%
fit(fatalities_count ~ is_weekend + e420,
data = daily_accidents_420)
poisson
# Do Holidays or Weekends Have Higher Risk?
library(tidymodels)
library(performance)  # for check_overdispersion()
library(poissonreg)
poisson <- poisson_reg() %>%
set_engine("glm") %>%
fit(fatalities_count ~ is_weekend + e420,
data = daily_accidents_420)
poisson
# Check for overdispersion
performance::check_overdispersion(poisson$fit)
# we have oversdipersion in the data so we shall fit. anegative binomial model
library(MASS)
nb_model <- glm.nb(fatalities_count ~ is_weekend + e420, data = daily_accidents_420)
summary(nb_model)
library(MASS)
nb_model <- glm.nb(fatalities_count ~ is_weekend + e420, data = daily_accidents_420)
summary(nb_model)
tidy(nb_model, exponentiate = TRUE, conf.int = TRUE)
library(tidytuesdayR)
library(GWalkR)
library(tidyverse)
# load data
tuesdata <- tidytuesdayR::tt_load('2025-04-22')
daily_accidents <- tuesdata$daily_accidents
daily_accidents_420 <- tuesdata$daily_accidents_420
# create days
daily_accidents$days <- weekdays(daily_accidents$date)
daily_accidents$months <- factor(months(daily_accidents$date))
daily_accidents_420$days <- weekdays(daily_accidents_420$date)
daily_accidents_420$months <- factor(months(daily_accidents_420$date))
# total accidents by day
weekday_summary <- daily_accidents_420 %>%
group_by(days) %>%
summarise(avg_fatalities = mean(fatalities_count, na.rm = TRUE)) %>%
arrange(desc(avg_fatalities))
View(year_fatal)
View(holiday_420)
# Is there a pattern overtime
ggplot(daily_accidents_420, aes(x = date, y = fatalities_count)) +
#geom_line(alpha = 0.6) +
geom_smooth(span = 0.2, se = FALSE, method = "loess") +
labs(title = "Trend in Daily Fatalities Over Time", y = "Fatalities") +
theme_pubclean() +
facet_wrap(~months) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
library(lubridate)
library(car)
library(ggpubr)
# check normality of each weekday group
ggqqplot(daily_accidents_420,
x = "fatalities_count",
facet.by = "days")
# Levene's Test for equal variances
leveneTest(fatalities_count ~ days, data = daily_accidents_420)
# This assumption is violated we shall use the Kruskal-Wallis test, that does assume equal variances.
kruskal.test(fatalities_count ~ days, data = daily_accidents_420)
# the p-value is significant (p < 0.05), indicating that at least one day has a statistically different mean number of fatalities.
# Is there a pattern overtime
ggplot(daily_accidents_420, aes(x = date, y = fatalities_count)) +
#geom_line(alpha = 0.6) +
geom_smooth(span = 0.2, se = FALSE, method = "loess") +
labs(title = "Trend in Daily Fatalities Over Time", y = "Fatalities") +
theme_pubclean() +
facet_wrap(~months) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "bottom")
library(lubridate)
library(car)
library(ggpubr)
# check normality of each weekday group
ggqqplot(daily_accidents_420,
x = "fatalities_count",
facet.by = "days")
# Levene's Test for equal variances
leveneTest(fatalities_count ~ days, data = daily_accidents_420)
# This assumption is violated we shall use the Kruskal-Wallis test, that does assume equal variances.
library(lubridate)
library(car)
library(ggpubr)
# check normality of each weekday group
ggqqplot(daily_accidents_420,
x = "fatalities_count",
facet.by = "days")
tidy(nb_model, exponentiate = TRUE, conf.int = TRUE)
#| echo: true
#| message: false
#| warning: false
library(tidytuesdayR)
library(GWalkR)
library(tidyverse)
#| echo: true
#| message: false
#| warning: false
# Levene's Test for equal variances
leveneTest(fatalities_count ~ days, data = daily_accidents_420)
